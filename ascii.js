// Generated by CoffeeScript 1.7.1
(function() {
  $(function() {
    var ascii;
    document.color = "#000";
    return ascii = new window.AsciiMap;
  });

  window.AsciiMap = (function() {
    function AsciiMap() {
      this.grid();
      this.bindings();
      this.click();
      this.colorwheel();
    }

    AsciiMap.prototype.grid = function(size) {
      var counter, p, ratio_height, ratio_width, rh, rw, w;
      if (size == null) {
        size = 15;
      }
      w = $(window);
      ratio_width = Math.floor(w.width() / size);
      ratio_height = Math.floor(w.height() / size);
      p = $("<div />", {
        "class": "grid",
        width: ratio_width * size,
        height: ratio_height * size
      }).addClass("grid").appendTo("body");
      counter = 0;
      rh = 0;
      while (rh <= ratio_height) {
        rw = 0;
        while (rw <= ratio_width) {
          counter++;
          $("<div />", {
            width: size - 1,
            height: size - 1
          }).addClass("cell").data("index", counter).appendTo(p);
          rw++;
        }
        rh++;
      }
    };

    AsciiMap.prototype.bindings = function() {
      return $(document).keypress(function(e) {
        return $("#character").val(String.fromCharCode(e.which));
      });
    };

    AsciiMap.prototype.click = function() {
      $("body").on("dragstart", ".cell", function(event) {
        return event.preventDefault();
      });
      $("body").on("click", ".cell", (function(_this) {
        return function(thing) {
          return _this.color($(thing.currentTarget));
        };
      })(this));
      return $(document).mousemove((function(_this) {
        return function(e) {
          var elem, x, y;
          x = e.clientX;
          y = e.clientY;
          elem = $(document.elementFromPoint(x, y));
          if (e.which === 1 && elem.hasClass("cell")) {
            return _this.color(elem);
          }
        };
      })(this));
    };

    AsciiMap.prototype.color = function(cell, color, character) {
      var text;
      if (color == null) {
        color = "";
      }
      if (character == null) {
        character = "";
      }
      cell = $(cell);
      text = $("#character").val();
      return cell.text(text).css("color", document.color);
    };

    AsciiMap.prototype.colorwheel = function() {
      var basic, color, colors, i, j, k, thing, _i, _len;
      basic = ["00", "CC", "33", "66", "99", "FF"];
      colors = [];
      i = 0;
      while (i < 6) {
        j = 0;
        while (j < 6) {
          k = 0;
          while (k < 6) {
            colors.push(basic[i] + basic[j] + basic[k]);
            k++;
          }
          j++;
        }
        i++;
      }
      for (_i = 0, _len = colors.length; _i < _len; _i++) {
        color = colors[_i];
        thing = $("<button />", {}).css("background", "#" + color).appendTo("#colors");
      }
      return $("body").on("click", "#colors button", function() {
        return document.color = $(this).css("background-color");
      });
    };

    return AsciiMap;

  })();

}).call(this);
